using System;
using easyFramework.Sys;
using easyFramework.Sys.ToolLib;

namespace easyFramework.Frontend.ASP.HTMLRenderer
{
	//================================================================================
	//Class:     efHtmlSelect

	//--------------------------------------------------------------------------------'
	//Module:    efHtmlSelect.vb
	//--------------------------------------------------------------------------------'
	//Copyright: Promain Software-Betreuung GmbH
	//--------------------------------------------------------------------------------'
	//Purpose:   html SELECT
	//--------------------------------------------------------------------------------'
	//Created:   23.03.2004 18:45:07
	//--------------------------------------------------------------------------------'
	//Changed:
	//--------------------------------------------------------------------------------'
	
	public class efHtmlSelect : efHTMLElement
	{
		
		
		
		//================================================================================
		//Public Properties:
		//================================================================================
		private string msSelectedValue;
		private NameValuePair[] maoNameValuePair;

		//================================================================================
		//Property:  Options
		//--------------------------------------------------------------------------------'
		//Purpose:   the list of options of the select-box
		//--------------------------------------------------------------------------------'
		//Params:
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:03:36
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public NameValuePair[] aoOptions
		{
			get{
				return maoNameValuePair;
			}
			
		}
		
		
		//================================================================================
		//Property:  sSelectedValue
		//--------------------------------------------------------------------------------'
		//Purpose:   returns/sets the selected option
		//--------------------------------------------------------------------------------'
		//Params:    -
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:06:59
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public string sSelectedValue
		{
		get{
			return msSelectedValue;
		}
		set
		{
			msSelectedValue = value;
		}
		}

		//================================================================================
		//Public Methods:
		//================================================================================

		//================================================================================
		//Sub:       gAddOption
		//--------------------------------------------------------------------------------'
		//Purpose:   adds an option-element
		//--------------------------------------------------------------------------------'
		//Params:    Value pair
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:04:45
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public void gAddOption (string sValue, string sText) 
		{
			gAddOption(sValue, sText, false);
		}
		
		public void gAddOption (string sValue, string sText, bool bChecked) 
		{

			if (maoNameValuePair == null)
			{
				maoNameValuePair = new NameValuePair[1];
			}
			else
			{
				NameValuePair[] newArray = new NameValuePair[maoNameValuePair.Length + 1];
				maoNameValuePair.CopyTo(newArray, 0);
				maoNameValuePair = newArray;
			}
			maoNameValuePair[maoNameValuePair.Length - 1] = new NameValuePair();
			maoNameValuePair[maoNameValuePair.Length - 1].sText = sText;
			maoNameValuePair[maoNameValuePair.Length - 1].sValue = sValue;
			maoNameValuePair[maoNameValuePair.Length - 1].bChecked = bChecked;



		}

		//================================================================================
		//Sub:       New
		//--------------------------------------------------------------------------------'
		//Purpose:   constructor
		//--------------------------------------------------------------------------------'
		//Params:    the parent-object
		//--------------------------------------------------------------------------------'
		//Created:   23.03.2004 19:15:01
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public efHtmlSelect(efHTMLElement oParent) : base(oParent) {
		msSelectedValue = "";

		}
		public efHtmlSelect() : base(null) {
		msSelectedValue = "";

		}

		//================================================================================
		//Function:  sGetNodeName
		//--------------------------------------------------------------------------------'
		//Purpose:   gets the nodename
		//--------------------------------------------------------------------------------'
		//Params:
		//--------------------------------------------------------------------------------'
		//Returns:   string
		//--------------------------------------------------------------------------------'
		//Created:   23.03.2004 19:14:45
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public override string sGetNodeName()
		{
		return "SELECT";
		}


		//================================================================================
		//Function:  asAllowedParentTags
		//--------------------------------------------------------------------------------'
		//Purpose:   returns the allowed parent-tags
		//--------------------------------------------------------------------------------'
		//Params:    '
		//--------------------------------------------------------------------------------'
		//Returns:   string-list
		//--------------------------------------------------------------------------------'
		//Created:   23.03.2004 18:48:37
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public override string[] asAllowedParentTags()
		{
		string[] asResult = new string[] { "TD", "P", "SPAN", "FORM", "BODY", "LI" };
		return asResult;
		}


		//================================================================================
		//Sub:       gRenderBeginTag
		//--------------------------------------------------------------------------------'
		//Purpose:   overwritten, because intelligent management of the selected-value
		//--------------------------------------------------------------------------------'
		//Params:    html-writer and Level
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:07:35
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public override void gRenderBeginTag (FastString oHtmlBuilder, int lLevel)
		{


		oHtmlBuilder.Append(msGetIndent(lLevel) + "<SELECT ");


		if (moAttributeList != null)
		{
			
			foreach (efAttribute oAttr in moAttributeList)
			{
				if (oAttr.bIsEmpty == false)
				{
					
					oHtmlBuilder.Append(" " + oAttr.sName + "=\"" + easyFramework.Sys.ToolLib.DataConversion.gsCStr(Functions.Replace(oAttr.sValue, "\"", efHTML_QUOT)) + "\"");
					
				}
				
			}
		}
		oHtmlBuilder.Append(">" + "\n");


		string sIndextForOptions = msGetIndent(lLevel + 1);


		if (aoOptions == null == false)
		{
			if (aoOptions.Length > 0)
			{
				for (int i = 0; i <= aoOptions.Length - 1; i++)
				{
					
					oHtmlBuilder.Append(sIndextForOptions + "<OPTION VALUE=\"" + aoOptions[i].sValue + "\" ");
					
					
					//also set the selected-value:
					if ((Functions.LCase(msSelectedValue) == Functions.LCase(aoOptions[i].sValue) && !Functions.IsEmptyString(aoOptions[i].sValue)) | aoOptions[i].bChecked)
					{
						oHtmlBuilder.Append("SELECTED=\"TRUE\" ");
					}
					
					
					oHtmlBuilder.Append(">" + "\n" + msGetIndent(lLevel + 1) + aoOptions[i].sText + "\n" + msGetIndent(lLevel) + "</OPTION>");
					
					
				}
				
			}
		}

		oHtmlBuilder.Append(msGetIndent(lLevel) + "</SELECT>");

		}


		//================================================================================
		//Sub:       gRenderEndTag
		//--------------------------------------------------------------------------------'
		//Purpose:
		//--------------------------------------------------------------------------------'
		//Params:
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:07:38
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public override void gRenderEndTag (FastString sHtmlBuilder, int lLevel)
		{
		//everything is done above
		}




		//================================================================================
		//Class:     NameValuePair

		//--------------------------------------------------------------------------------'
		//Module:    efHtmlSelect.vb
		//--------------------------------------------------------------------------------'
		//Purpose:   simple class for holding the option-values
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:43:54
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public class NameValuePair
		{
		private string msText;
		private string msValue;
		private bool mbChecked;

		//================================================================================
		//Property:  sText
		//--------------------------------------------------------------------------------'
		//Purpose:   display-value of option-tag
		//--------------------------------------------------------------------------------'
		//Params:    -
		//--------------------------------------------------------------------------------'
		//Created:   26.03.2004 01:44:32
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public string sText
		{
			get{
				return msText;
			}
			set
			{
				msText = value;
			}
		}

			//================================================================================
			//Property:  sValue
			//--------------------------------------------------------------------------------'
			//Purpose:   value of the option-item
			//--------------------------------------------------------------------------------'
			//Params:    -
			//--------------------------------------------------------------------------------'
			//Created:   26.03.2004 01:44:42
			//--------------------------------------------------------------------------------'
			//Changed:
			//--------------------------------------------------------------------------------'
			public string sValue
			{
				get
				{
					return msValue;
				}
				set
				{
					msValue = value;
				}
			}

			/**
			 * gibt an, ob der Wert selektiert ist oder nicht
			 * */
			public bool bChecked 
			{
				get
				{
					return mbChecked;
				}
				set 
				{
					mbChecked = value;
				}

			}
		}




	}
	
	
	
	
}
