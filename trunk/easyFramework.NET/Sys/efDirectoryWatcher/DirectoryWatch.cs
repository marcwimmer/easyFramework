using System;
using easyFramework.Sys.ToolLib;
using System.IO;

namespace easyFramework.Sys.ToolLib
{
	//================================================================================
	//Class:     DirectoryWatch

	//--------------------------------------------------------------------------------'
	//Module:    DirectoryWatch.vb
	//--------------------------------------------------------------------------------'
	//Copyright: Promain Software-Betreuung GmbH, 2004
	//--------------------------------------------------------------------------------'
	//Purpose:   watches a given directory for changes
	//--------------------------------------------------------------------------------'
	//Created:   04.06.2004 17:14:31
	//--------------------------------------------------------------------------------'
	//Changed:
	//--------------------------------------------------------------------------------'
	
	
	public class DirectoryWatch
	{
		
		
		//================================================================================
		//Private Fields:
		//================================================================================
		private efArrayList mosFiles;
		private string msDirectory;
		
		//================================================================================
		//Public Consts:
		//================================================================================
		
		//================================================================================
		//Public Properties:
		//================================================================================
		
		//================================================================================
		//Property:  sDirectory
		//--------------------------------------------------------------------------------'
		//Purpose:   returns the watched directory
		//--------------------------------------------------------------------------------'
		//Params:
		//--------------------------------------------------------------------------------'
		//Created:   04.06.2004 18:03:48
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public string sDirectory
		{
			get
			{
				return msDirectory;
			}
		}
		
		//================================================================================
		//Public Events:
		//================================================================================
		
		//================================================================================
		//Public Methods:
		//================================================================================
		//================================================================================
		//Function:  gbDifferDirectories
		//--------------------------------------------------------------------------------'
		//Purpose:   compares two arrays of file-informations
		//--------------------------------------------------------------------------------'
		//Params:    the second directory to which the current-directory is compared
		//--------------------------------------------------------------------------------'
		//Returns:
		//--------------------------------------------------------------------------------'
		//Created:   04.06.2004 18:07:00
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public bool gbDifferDirectories(string sDirectory)
		{
			
			bool bFound;
			TFileInfo f1;
			TFileInfo f2;
			bool bResult = false;
			
			efArrayList dir2 = moRecordDirectory(sDirectory);
			efArrayList dir1 = mosFiles;
			
			for (int i = 0; i <= dir1.Count - 1; i++)
			{
				
				f1 = ((TFileInfo)(dir1[i]));
				
				bFound = false;
				for (int y = 0; y <= dir2.Count - 1; y++)
				{
					
					f2 = ((TFileInfo)(dir2[y]));
					
					
					if (f2.sFileName == f1.sFileName)
					{
						bFound = true;
						
						if (f2.dFileModDate != f1.dFileModDate)
						{
							bResult = true;
							break;
						}
						
						break;
						
					}
					
					if (bResult)
					{
						break;
					}
				}
				
				if (bFound == false)
				{
					bResult = true;
					break;
				}
			}
			
			if (bResult == false)
			{
				
				for (int y = 0; y <= dir2.Count - 1; y++)
				{
					
					f2 = ((TFileInfo)(dir2[y]));
					
					bFound = false;
					for (int i = 0; i <= dir1.Count - 1; i++)
					{
						
						f1 = ((TFileInfo)(dir1[i]));
						
						
						if (f2.sFileName == f1.sFileName)
						{
							bFound = true;
							break;
						}
						
					}
					
					if (bFound == false)
					{
						bResult = true;
						break;
					}
				}
			}
			
			
			if (bResult)
			{
				
				//--directories differ; store new image of folder
				mosFiles = dir2;
				
			}
			
			return bResult;
			
		}
		
		//================================================================================
		//Sub:       New
		//--------------------------------------------------------------------------------'
		//Purpose:   constructor
		//--------------------------------------------------------------------------------'
		//Params:    needs the directory-name, which is watched
		//--------------------------------------------------------------------------------'
		//Created:   04.06.2004 18:04:02
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		public DirectoryWatch(string sDirectory) 
		{
			mosFiles = new efArrayList();
			
			
			msDirectory = sDirectory;
			
			mosFiles = moRecordDirectory(sDirectory);
			
		}
		//================================================================================
		//Protected Properties:
		//================================================================================
		
		//================================================================================
		//Protected Methods:
		//================================================================================
		
		//================================================================================
		//Private Consts:
		//================================================================================
		
		//================================================================================
		//Private Fields:
		//================================================================================
		
		//================================================================================
		//Private Methods:
		//================================================================================
		
		//================================================================================
		//Function:  gRecordDirectory
		//--------------------------------------------------------------------------------'
		//Purpose:   stores the files of the directory in an array
		//--------------------------------------------------------------------------------'
		//Params:
		//--------------------------------------------------------------------------------'
		//Returns:
		//--------------------------------------------------------------------------------'
		//Created:   04.06.2004 18:06:57
		//--------------------------------------------------------------------------------'
		//Changed:
		//--------------------------------------------------------------------------------'
		private efArrayList moRecordDirectory(string sDirectoryName)
		{
			
			string[] asFiles = Directory.GetFiles(sDirectoryName);
			efArrayList oResult = new efArrayList();
			
			for (int i = 0; i <= asFiles.Length - 1; i++)
			{
				
				TFileInfo oFileInfo = new TFileInfo();
				oFileInfo.sFileName = asFiles[i];
				oFileInfo.dFileModDate = File.GetLastWriteTime(asFiles[i]);
				
				oResult.Add(oFileInfo);
				
			}
			
			return oResult;
			
		}
		
		
		
		
		
		//================================================================================
		//Private Classes:
		//================================================================================
		private class TFileInfo
		{
			public string sFileName;
			public DateTime dFileModDate;
		}
	}
	
}
