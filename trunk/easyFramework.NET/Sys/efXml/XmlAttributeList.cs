using System;
using System.Collections;

namespace easyFramework.Sys.Xml
{
	//================================================================================
	// Project:      easyFramework
	// Copyright:    Promain Software-Betreuung GmbH
	// Component:    XmlAttributeList.vb
	//--------------------------------------------------------------------------------
	// Purpose:      the basic xml-attributelist
	//--------------------------------------------------------------------------------
	// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
	//--------------------------------------------------------------------------------
	// Changed:
	//================================================================================
	
	//================================================================================
	//Imports
	//================================================================================
	
	
	public class XmlAttributeList : IEnumerator
	{
		
		//================================================================================
		//private fields:
		//================================================================================
		private System.Xml.XmlAttributeCollection moAttributes;
		private System.Xml.XmlNode moParentNode;
		private int mlCurrent;
		
		//================================================================================
		//public properties:
		//================================================================================
		
		//================================================================================
		// Property:     Count
		//--------------------------------------------------------------------------------
		// Purpose:      Count
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public int Count
		{
			get{
				return moAttributes.Count;
			}
		}
		
		//================================================================================
		// Property:     IsSynchronized
		//--------------------------------------------------------------------------------
		// Purpose:      IsSynchronized
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public bool IsSynchronized
		{
			get{
				return false;
			}
		}
		
		//================================================================================
		// Property:     SyncRoot
		//--------------------------------------------------------------------------------
		// Purpose:      SyncRoot
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public object SyncRoot
		{
			get{
				//Debug.Assert(False)
				//not implemented
				return null;
			}
		}
		
		//================================================================================
		// Property:     Current
		//--------------------------------------------------------------------------------
		// Purpose:      Current
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public object Current
		{
			get{
				return moAttributes[mlCurrent];
			}
		}
		
		//================================================================================
		// Property:       Item
		//--------------------------------------------------------------------------------
		// Purpose:      returns the attribute; if it doesn't exist, it is created
		//--------------------------------------------------------------------------------
		// Parameteres:  sName - String
		//--------------------------------------------------------------------------------
		// Returns:      -
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public XmlAttribute this[string sName]
		{
			get{
				
				System.Xml.XmlAttribute oAttr = null;
				bool bFound = false;

				foreach (System.Xml.XmlAttribute tempLoopVar_oAttr in moAttributes)
				{
					oAttr = tempLoopVar_oAttr;
					if (oAttr.Name == sName)
					{
						bFound = true;
						goto endOfForLoop;
					}
				}
endOfForLoop:
				
				if (! bFound)
				{
					oAttr = moParentNode.OwnerDocument.CreateAttribute(sName);
					moParentNode.Attributes.SetNamedItem(oAttr);
				}
				
				return new XmlAttribute(oAttr);
				
			}
		}
		
		//================================================================================
		//public methods:
		//================================================================================
		//================================================================================
		// Method:       New
		//--------------------------------------------------------------------------------
		// Purpose:      constructor
		//--------------------------------------------------------------------------------
		// Parameteres:  oAttributes of System.XML.AttributeCollection
		//--------------------------------------------------------------------------------
		// Returns:      -
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public XmlAttributeList(System.Xml.XmlAttributeCollection oAttributes, System.Xml.XmlNode oParentNode) {
			moAttributes = oAttributes;
			moParentNode = oParentNode;
		}
		
		
		
		//================================================================================
		// Method:       CopyTo
		//--------------------------------------------------------------------------------
		// Purpose:      copies arraycontent
		//--------------------------------------------------------------------------------
		// Parameteres:  array, index
		//--------------------------------------------------------------------------------
		// Returns:      -
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public void CopyTo (System.Array array, int index)
		{
			//Debug.Assert(False)
			//not implemented
		}
		
		//================================================================================
		// Method:       GetEnumerator
		//--------------------------------------------------------------------------------
		// Purpose:      returns the enumerator
		//--------------------------------------------------------------------------------
		// Parameteres:  -
		//--------------------------------------------------------------------------------
		// Returns:      -
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public System.Collections.IEnumerator GetEnumerator()
		{
			return this;
		}
		
		//================================================================================
		// Method:       MoveNext
		//--------------------------------------------------------------------------------
		// Parameteres:  Boolean
		//--------------------------------------------------------------------------------
		// Returns:      True, if not eof
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public bool MoveNext()
		{
			if (mlCurrent < moAttributes.Count - 1)
			{
				mlCurrent += 1;
				return true;
			}
			else
			{
				return false;
			}
			
		}
		
		//================================================================================
		// Method:       Reset
		//--------------------------------------------------------------------------------
		// Purpose:      for enumerator; start at first item again
		//--------------------------------------------------------------------------------
		// Parameteres:  -
		//--------------------------------------------------------------------------------
		// Returns:      -
		//--------------------------------------------------------------------------------
		// Created:      21.03.04 M.Wimmer (mwimmer@promain-software.de)
		//--------------------------------------------------------------------------------
		// Changed:
		//================================================================================
		public void Reset ()
		{
			mlCurrent = -1;
		}
	}
	
}
